"""Initial migration

Revision ID: 7107ad07c5a9
Revises:
Create Date: 2025-08-04 14:53:23.413063

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7107ad07c5a9"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column(
            "hashed_password",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "full_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "display_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "avatar_url", sa.VARCHAR(length=500), autoincrement=False, nullable=True
        ),
        sa.Column("bio", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "nickname", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "department", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column("join_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("birth_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "hometown", sa.VARCHAR(length=200), autoincrement=False, nullable=True
        ),
        sa.Column(
            "residence", sa.VARCHAR(length=200), autoincrement=False, nullable=True
        ),
        sa.Column("hobbies", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("student_activities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("holiday_activities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("favorite_food", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("favorite_media", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("favorite_music", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("pets_oshi", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("respected_person", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("motto", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("future_goals", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "firebase_uid", sa.VARCHAR(length=128), autoincrement=False, nullable=True
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_verified", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_premium", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "subscription_status",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "subscription_end_date",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "monthly_voice_minutes", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "monthly_analysis_count", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "last_login_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    op.create_index("ix_users_username", "users", ["username"], unique=True)
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_index("ix_users_firebase_uid", "users", ["firebase_uid"], unique=True)
    op.create_index("ix_users_email", "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_users_email", table_name="users")
    op.drop_index("ix_users_firebase_uid", table_name="users")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_index("ix_users_username", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
