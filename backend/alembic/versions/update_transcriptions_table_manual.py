"""update_transcriptions_table_manual

Revision ID: update_transcriptions_manual
Revises: 525d369dc5b6
Create Date: 2025-08-07 19:30:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "update_transcriptions_manual"
down_revision = "525d369dc5b6"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 既存のtranscriptionsテーブルを削除
    op.drop_index(op.f("ix_transcriptions_id"), table_name="transcriptions")
    op.drop_table("transcriptions")

    # 新しいtranscriptionsテーブルを作成
    op.create_table(
        "transcriptions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("voice_session_id", sa.INTEGER(), nullable=False),
        sa.Column("speaker_id", sa.INTEGER(), nullable=True),
        sa.Column("text_content", sa.TEXT(), nullable=False),
        sa.Column(
            "start_time_seconds", sa.DECIMAL(precision=10, scale=3), nullable=False
        ),
        sa.Column(
            "end_time_seconds", sa.DECIMAL(precision=10, scale=3), nullable=False
        ),
        sa.Column("confidence_score", sa.DECIMAL(precision=4, scale=3), nullable=True),
        sa.Column("language", sa.VARCHAR(length=10), nullable=True),
        sa.Column("is_final", sa.BOOLEAN(), nullable=True),
        sa.Column("is_processed", sa.BOOLEAN(), nullable=True),
        sa.Column("word_timestamps", sa.TEXT(), nullable=True),
        sa.Column(
            "speaker_confidence", sa.DECIMAL(precision=4, scale=3), nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("processed_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["speaker_id"], ["users.id"], name=op.f("transcriptions_speaker_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["voice_session_id"],
            ["voice_sessions.id"],
            name=op.f("transcriptions_voice_session_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("transcriptions_pkey")),
    )

    # インデックスを作成
    op.create_index(
        "idx_transcriptions_voice_session_id",
        "transcriptions",
        ["voice_session_id"],
        unique=False,
    )
    op.create_index(
        "idx_transcriptions_speaker_id", "transcriptions", ["speaker_id"], unique=False
    )
    op.create_index(
        "idx_transcriptions_start_time",
        "transcriptions",
        ["start_time_seconds"],
        unique=False,
    )
    op.create_index(
        "idx_transcriptions_created_at", "transcriptions", ["created_at"], unique=False
    )
    op.create_index(
        "idx_transcriptions_is_final", "transcriptions", ["is_final"], unique=False
    )
    op.create_index(
        "idx_transcriptions_language", "transcriptions", ["language"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # インデックスを削除
    op.drop_index("idx_transcriptions_language", table_name="transcriptions")
    op.drop_index("idx_transcriptions_is_final", table_name="transcriptions")
    op.drop_index("idx_transcriptions_created_at", table_name="transcriptions")
    op.drop_index("idx_transcriptions_start_time", table_name="transcriptions")
    op.drop_index("idx_transcriptions_speaker_id", table_name="transcriptions")
    op.drop_index("idx_transcriptions_voice_session_id", table_name="transcriptions")

    # テーブルを削除
    op.drop_table("transcriptions")

    # 古いテーブルを再作成
    op.create_table(
        "transcriptions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("voice_session_id", sa.INTEGER(), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.Column("text", sa.TEXT(), nullable=False),
        sa.Column("start_time", sa.DOUBLE_PRECISION(precision=53), nullable=True),
        sa.Column("end_time", sa.DOUBLE_PRECISION(precision=53), nullable=True),
        sa.Column("confidence", sa.DOUBLE_PRECISION(precision=53), nullable=True),
        sa.Column("is_processed", sa.BOOLEAN(), nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("transcriptions_user_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["voice_session_id"],
            ["voice_sessions.id"],
            name=op.f("transcriptions_voice_session_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("transcriptions_pkey")),
    )
    op.create_index(
        op.f("ix_transcriptions_id"), "transcriptions", ["id"], unique=False
    )
    # ### end Alembic commands ###
